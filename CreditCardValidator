import java.util.Scanner;

public class CreditCardValidator {

    /** Return true if the card number is valid */
    public static boolean isValid(long number) {
        return (sumOfDoubleEvenPlace(number) + sumOfOddPlace(number)) % 10 == 0 && (getSize(number) >= 13 && getSize(number) <= 16);
    }

    /** Get the result from Step 2: Sum of digits in even places */
    public static int sumOfDoubleEvenPlace(long number) {
        int sum = 0;
        int count = 0;

        // Process every second digit starting from the right (even positions)
        while (number > 0) {
            if (count % 2 == 1) {
                sum += getDigit((int)(number % 10) * 2); // Double the digit and get single-digit result
            }
            number /= 10;
            count++;
        }
        return sum;
    }

    /** Return the sum of digits for numbers greater than 9 */
    public static int getDigit(int number) {
        if (number < 10) {
            return number;  // Return single digit
        } else {
            return number / 10 + number % 10;  // Sum the digits of the two-digit number
        }
    }

    /** Return sum of odd-place digits in the number */
    public static int sumOfOddPlace(long number) {
        int sum = 0;
        int count = 0;

        // Process odd places (1st, 3rd, 5th, etc. from right)
        while (number > 0) {
            if (count % 2 == 0) {
                sum += number % 10;
            }
            number /= 10;
            count++;
        }
        return sum;
    }

    /** Return true if the number d is a prefix for number */
    public static boolean prefixMatched(long number, int d) {
        return getPrefix(number, getSize(d)) == d;
    }

    /** Return the number of digits in d */
    public static int getSize(long d) {
        int size = 0;
        while (d > 0) {
            d /= 10;
            size++;
        }
        return size;
    }

    /** Return the first k digits of number */
    public static long getPrefix(long number, int k) {
        while (getSize(number) > k) {
            number /= 10;
        }
        return number;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Prompt the user to enter a credit card number
        System.out.print("Enter a credit card number: ");
        long cardNumber = input.nextLong();

        // Check if the number is valid
        if (isValid(cardNumber)) {
            // Identify the card type by checking the prefix
            if (prefixMatched(cardNumber, 4)) {
                System.out.println("Valid Visa card number.");
            } else if (prefixMatched(cardNumber, 5)) {
                System.out.println("Valid MasterCard card number.");
            } else if (prefixMatched(cardNumber, 37)) {
                System.out.println("Valid American Express card number.");
            } else if (prefixMatched(cardNumber, 6)) {
                System.out.println("Valid Discover card number.");
            } else {
                System.out.println("Valid but unrecognized card type.");
            }
        } else {
            System.out.println("Invalid card number.");
        }

        input.close();
    }
}
